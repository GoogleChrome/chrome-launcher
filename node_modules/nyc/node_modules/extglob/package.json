{
  "_from": "extglob@^0.3.1",
  "_id": "extglob@0.3.2",
  "_inBundle": false,
  "_integrity": "sha1-Lhj/PS9JqydlzskCPwEdqo2DSaE=",
  "_location": "/nyc/extglob",
  "_phantomChildren": {},
  "_requested": {
    "type": "range",
    "registry": true,
    "raw": "extglob@^0.3.1",
    "name": "extglob",
    "escapedName": "extglob",
    "rawSpec": "^0.3.1",
    "saveSpec": null,
    "fetchSpec": "^0.3.1"
  },
  "_requiredBy": [
    "/nyc/micromatch"
  ],
  "_resolved": "https://registry.npmjs.org/extglob/-/extglob-0.3.2.tgz",
  "_shasum": "2e18ff3d2f49ab2765cec9023f011daa8d8349a1",
  "_shrinkwrap": null,
  "_spec": "extglob@^0.3.1",
  "_where": "/Users/benjamincoe/bcoe/nyc/node_modules/micromatch",
  "author": {
    "name": "Jon Schlinkert",
    "url": "https://github.com/jonschlinkert"
  },
  "bugs": {
    "url": "https://github.com/jonschlinkert/extglob/issues"
  },
  "bundleDependencies": false,
  "dependencies": {
    "is-extglob": "^1.0.0"
  },
  "deprecated": false,
  "description": "Convert extended globs to regex-compatible strings. Add (almost) the expressive power of regular expressions to glob patterns.",
  "devDependencies": {
    "ansi-green": "^0.1.1",
    "micromatch": "^2.1.6",
    "minimatch": "^2.0.1",
    "minimist": "^1.1.0",
    "mocha": "*",
    "should": "*",
    "success-symbol": "^0.1.0"
  },
  "engines": {
    "node": ">=0.10.0"
  },
  "files": [
    "index.js"
  ],
  "homepage": "https://github.com/jonschlinkert/extglob",
  "keywords": [
    "bash",
    "extended",
    "extglob",
    "glob",
    "ksh",
    "match",
    "wildcard"
  ],
  "license": "MIT",
  "main": "index.js",
  "name": "extglob",
  "optionalDependencies": {},
  "readme": "# extglob [![NPM version](https://badge.fury.io/js/extglob.svg)](http://badge.fury.io/js/extglob)  [![Build Status](https://travis-ci.org/jonschlinkert/extglob.svg)](https://travis-ci.org/jonschlinkert/extglob)\n\n> Convert extended globs to regex-compatible strings. Add (almost) the expressive power of regular expressions to glob patterns.\n\nInstall with [npm](https://www.npmjs.com/)\n\n```sh\n$ npm i extglob --save\n```\n\nUsed by [micromatch](https://github.com/jonschlinkert/micromatch).\n\n**Features**\n\n* Convert an extglob string to a regex-compatible string. **Only converts extglobs**, to handle full globs use [micromatch](https://github.com/jonschlinkert/micromatch).\n* Pass `{regex: true}` to return a regex\n* Handles nested patterns\n* More complete (and correct) support than [minimatch](https://github.com/isaacs/minimatch)\n\n## Usage\n\n```js\nvar extglob = require('extglob');\n\nextglob('?(z)');\n//=> '(?:z)?'\nextglob('*(z)');\n//=> '(?:z)*'\nextglob('+(z)');\n//=> '(?:z)+'\nextglob('@(z)');\n//=> '(?:z)'\nextglob('!(z)');\n//=> '(?!^(?:(?!z)[^/]*?)).*$'\n```\n\n**Optionally return regex**\n\n```js\nextglob('!(z)', {regex: true});\n//=> /(?!^(?:(?!z)[^/]*?)).*$/\n```\n\n## Extglob patterns\n\nTo learn more about how extglobs work, see the docs for [Bash pattern matching](https://www.gnu.org/software/bash/manual/html_node/Pattern-Matching.html):\n\n* `?(pattern)`: Match zero or one occurrence of the given pattern.\n* `*(pattern)`: Match zero or more occurrences of the given pattern.\n* `+(pattern)`: Match one or more occurrences of the given pattern.\n* `@(pattern)`: Match one of the given pattern.\n* `!(pattern)`: Match anything except one of the given pattern.\n\n## Related\n\n* [braces](https://github.com/jonschlinkert/braces): Fastest brace expansion for node.js, with the most complete support for the Bash 4.3 braces… [more](https://github.com/jonschlinkert/braces)\n* [expand-brackets](https://github.com/jonschlinkert/expand-brackets): Expand POSIX bracket expressions (character classes) in glob patterns.\n* [expand-range](https://github.com/jonschlinkert/expand-range): Fast, bash-like range expansion. Expand a range of numbers or letters, uppercase or lowercase. See… [more](https://github.com/jonschlinkert/expand-range)\n* [fill-range](https://github.com/jonschlinkert/fill-range): Fill in a range of numbers or letters, optionally passing an increment or multiplier to… [more](https://github.com/jonschlinkert/fill-range)\n* [micromatch](https://github.com/jonschlinkert/micromatch): Glob matching for javascript/node.js. A drop-in replacement and faster alternative to minimatch and multimatch. Just… [more](https://github.com/jonschlinkert/micromatch)\n\n## Run tests\n\nInstall dev dependencies:\n\n```sh\n$ npm i -d && npm test\n```\n\n## Contributing\n\nPull requests and stars are always welcome. For bugs and feature requests, [please create an issue](https://github.com/jonschlinkert/extglob/issues/new)\n\n## Author\n\n**Jon Schlinkert**\n\n+ [github/jonschlinkert](https://github.com/jonschlinkert)\n+ [twitter/jonschlinkert](http://twitter.com/jonschlinkert)\n\n## License\n\nCopyright © 2015 Jon Schlinkert\nReleased under the MIT license.\n\n***\n\n_This file was generated by [verb-cli](https://github.com/assemble/verb-cli) on August 01, 2015._",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/jonschlinkert/extglob.git"
  },
  "scripts": {
    "test": "mocha"
  },
  "verb": {
    "related": {
      "list": [
        "micromatch",
        "expand-brackets",
        "braces",
        "fill-range",
        "expand-range"
      ]
    }
  },
  "version": "0.3.2"
}
