{
  "_args": [
    [
      {
        "raw": "type-detect@^4.0.0",
        "scope": null,
        "escapedName": "type-detect",
        "name": "type-detect",
        "rawSpec": "^4.0.0",
        "spec": ">=4.0.0 <5.0.0",
        "type": "range"
      },
      "/Users/alexamil/WebstormProjects/oresoftware/chrome-launcher/node_modules/sinon"
    ]
  ],
  "_from": "type-detect@>=4.0.0 <5.0.0",
  "_id": "type-detect@4.0.3",
  "_inCache": true,
  "_location": "/type-detect",
  "_nodeVersion": "4.8.2",
  "_npmOperationalInternal": {
    "host": "packages-12-west.internal.npmjs.com",
    "tmp": "tmp/type-detect-4.0.3.tgz_1492659793798_0.8881021328270435"
  },
  "_npmUser": {
    "name": "chaijs",
    "email": "chaijs@keithcirkel.co.uk"
  },
  "_npmVersion": "4.5.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "type-detect@^4.0.0",
    "scope": null,
    "escapedName": "type-detect",
    "name": "type-detect",
    "rawSpec": "^4.0.0",
    "spec": ">=4.0.0 <5.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/sinon"
  ],
  "_resolved": "https://registry.npmjs.org/type-detect/-/type-detect-4.0.3.tgz",
  "_shasum": "0e3f2670b44099b0b46c284d136a7ef49c74c2ea",
  "_shrinkwrap": null,
  "_spec": "type-detect@^4.0.0",
  "_where": "/Users/alexamil/WebstormProjects/oresoftware/chrome-launcher/node_modules/sinon",
  "author": {
    "name": "Jake Luer",
    "email": "jake@alogicalparadox.com",
    "url": "http://alogicalparadox.com"
  },
  "bugs": {
    "url": "https://github.com/chaijs/type-detect/issues"
  },
  "contributors": [
    {
      "name": "David Losert",
      "url": "https://github.com/davelosert"
    },
    {
      "name": "Keith Cirkel",
      "url": "https://github.com/keithamus"
    },
    {
      "name": "Miroslav BajtoÅ¡",
      "url": "https://github.com/bajtos"
    }
  ],
  "dependencies": {},
  "description": "Improved typeof detection for node.js and the browser.",
  "devDependencies": {
    "benchmark": "^2.1.0",
    "browserify": "^14.3.0",
    "browserify-istanbul": "^2.0.0",
    "coveralls": "2.13.0",
    "eslint": "^3.19.0",
    "eslint-config-strict": "^13.0.0",
    "eslint-plugin-filenames": "^1.1.0",
    "husky": "^0.13.3",
    "istanbul": "^0.4.2",
    "karma": "^1.1.2",
    "karma-browserify": "^5.0.2",
    "karma-coverage": "^1.0.0",
    "karma-mocha": "^1.0.1",
    "karma-phantomjs-launcher": "^1.0.0",
    "karma-sauce-launcher": "^1.0.0",
    "lcov-result-merger": "^1.2.0",
    "mocha": "^3.0.0",
    "phantomjs-prebuilt": "^2.1.5",
    "semantic-release": "^6.3.2",
    "simple-assert": "^1.0.0",
    "travis-after-all": "^1.4.4",
    "validate-commit-msg": "^2.3.1"
  },
  "directories": {},
  "dist": {
    "shasum": "0e3f2670b44099b0b46c284d136a7ef49c74c2ea",
    "tarball": "https://registry.npmjs.org/type-detect/-/type-detect-4.0.3.tgz"
  },
  "engines": {
    "node": "*"
  },
  "eslintConfig": {
    "env": {
      "es6": true
    },
    "extends": [
      "strict/es5"
    ],
    "globals": {
      "HTMLElement": false
    },
    "rules": {
      "complexity": 0,
      "max-statements": 0
    }
  },
  "files": [
    "index.js",
    "type-detect.js"
  ],
  "gitHead": "c7895e499ecc0a93c567adef9fa2b33eec13d2ab",
  "homepage": "https://github.com/chaijs/type-detect#readme",
  "keywords": [
    "type",
    "typeof",
    "types"
  ],
  "license": "MIT",
  "main": "./index.js",
  "maintainers": [
    {
      "name": "chaijs",
      "email": "chaijs@keithcirkel.co.uk"
    }
  ],
  "name": "type-detect",
  "optionalDependencies": {},
  "readme": "<h1 align=center>\n  <a href=\"http://chaijs.com\" title=\"Chai Documentation\">\n    <img alt=\"ChaiJS\" src=\"http://chaijs.com/img/chai-logo.png\"/> type-detect\n  </a>\n</h1>\n\n<p align=center>\n  Improved typeof detection for <a href=\"http://nodejs.org\">node</a> and the browser.\n</p>\n\n<p align=center>\n  <a href=\"./LICENSE\">\n    <img\n      alt=\"license:mit\"\n      src=\"https://img.shields.io/badge/license-mit-green.svg?style=flat-square\"\n    />\n  </a>\n  <a href=\"https://github.com/chaijs/type-detect/releases\">\n    <img\n      alt=\"tag:?\"\n      src=\"https://img.shields.io/github/tag/chaijs/type-detect.svg?style=flat-square\"\n    />\n  </a>\n  <a href=\"https://travis-ci.org/chaijs/type-detect\">\n    <img\n      alt=\"build:?\"\n      src=\"https://img.shields.io/travis/chaijs/type-detect/master.svg?style=flat-square\"\n    />\n  </a>\n  <a href=\"https://coveralls.io/r/chaijs/type-detect\">\n    <img\n      alt=\"coverage:?\"\n      src=\"https://img.shields.io/coveralls/chaijs/type-detect/master.svg?style=flat-square\"\n    />\n  </a>\n  <a href=\"https://www.npmjs.com/packages/type-detect\">\n    <img\n      alt=\"npm:?\"\n      src=\"https://img.shields.io/npm/v/type-detect.svg?style=flat-square\"\n    />\n  </a>\n  <a href=\"https://www.npmjs.com/packages/type-detect\">\n    <img\n      alt=\"dependencies:?\"\n      src=\"https://img.shields.io/npm/dm/type-detect.svg?style=flat-square\"\n    />\n  </a>\n  <a href=\"\">\n    <img\n      alt=\"devDependencies:?\"\n      src=\"https://img.shields.io/david/chaijs/type-detect.svg?style=flat-square\"\n    />\n  </a>\n  <br/>\n  <a href=\"https://saucelabs.com/u/chaijs-type-detect\">\n    <img\n      alt=\"Selenium Test Status\"\n      src=\"https://saucelabs.com/browser-matrix/chaijs-type-detect.svg\"\n    />\n  </a>\n  <br>\n  <a href=\"https://chai-slack.herokuapp.com/\">\n    <img\n      alt=\"Join the Slack chat\"\n      src=\"https://img.shields.io/badge/slack-join%20chat-E2206F.svg?style=flat-square\"\n    />\n  </a>\n  <a href=\"https://gitter.im/chaijs/chai\">\n    <img\n      alt=\"Join the Gitter chat\"\n      src=\"https://img.shields.io/badge/gitter-join%20chat-D0104D.svg?style=flat-square\"\n    />\n  </a>\n</p>\n\n## What is Type-Detect?\n\nType Detect is a module which you can use to detect the type of a given object. It returns a string representation of the object's type, either using [`typeof`](http://www.ecma-international.org/ecma-262/6.0/index.html#sec-typeof-operator) or [`@@toStringTag`](http://www.ecma-international.org/ecma-262/6.0/index.html#sec-symbol.tostringtag). It also normalizes some object names for consistency among browsers.\n\n## Why?\n\nThe `typeof` operator will only specify primitive values; everthing else is `\"object\"` (including `null`, arrays, regexps, etc). Many developers use `Object.prototype.toString()` - which is a fine alternative and returns many more types (null returns `[object Null]`, Arrays as `[object Array]`, regexps as `[object RegExp]` etc). \n\nSadly, `Object.prototype.toString` is slow, and buggy. By slow - we mean it is slower than `typeof`. By buggy - we mean that some values (like Promises, the global object, iterators, dataviews, a bunch of HTML elements) all report different things in different browsers.\n\n`type-detect` fixes all of the shortcomings with `Object.prototype.toString`. We have extra code to speed up checks of JS and DOM objects, as much as 20-30x faster for some values. `type-detect` also fixes any consistencies with these objects.\n\n## Installation\n\n### Node.js\n\n`type-detect` is available on [npm](http://npmjs.org). To install it, type:\n\n    $ npm install type-detect\n\n### Browsers\n\nYou can also use it within the browser; install via npm and use the `type-detect.js` file found within the download. For example:\n\n```html\n<script src=\"./node_modules/type-detect/type-detect.js\"></script>\n```\n\n## Usage\n\nThe primary export of `type-detect` is function that can serve as a replacement for `typeof`. The results of this function will be more specific than that of native `typeof`.\n\n```js\nvar type = require('type-detect');\n```\n\n#### array\n\n```js\nassert(type([]) === 'Array');\nassert(type(new Array()) === 'Array');\n```\n\n#### regexp\n\n```js\nassert(type(/a-z/gi) === 'RegExp');\nassert(type(new RegExp('a-z')) === 'RegExp');\n```\n\n#### function\n\n```js\nassert(type(function () {}) === 'function');\n```\n\n#### arguments\n\n```js\n(function () {\n  assert(type(arguments) === 'Arguments');\n})();\n```\n\n#### date\n\n```js\nassert(type(new Date) === 'Date');\n```\n\n#### number\n\n```js\nassert(type(1) === 'number');\nassert(type(1.234) === 'number');\nassert(type(-1) === 'number');\nassert(type(-1.234) === 'number');\nassert(type(Infinity) === 'number');\nassert(type(NaN) === 'number');\nassert(type(new Number(1)) === 'Number'); // note - the object version has a capital N\n```\n\n#### string\n\n```js\nassert(type('hello world') === 'string');\nassert(type(new String('hello')) === 'String'); // note - the object version has a capital S\n```\n\n#### null\n\n```js\nassert(type(null) === 'null');\nassert(type(undefined) !== 'null');\n```\n\n#### undefined\n\n```js\nassert(type(undefined) === 'undefined');\nassert(type(null) !== 'undefined');\n```\n\n#### object\n\n```js\nvar Noop = function () {};\nassert(type({}) === 'Object');\nassert(type(Noop) !== 'Object');\nassert(type(new Noop) === 'Object');\nassert(type(new Object) === 'Object');\n```\n\n#### ECMA6 Types\n\nAll new ECMAScript 2015 objects are also supported, such as Promises and Symbols:\n\n```js\nassert(type(new Map() === 'Map');\nassert(type(new WeakMap()) === 'WeakMap');\nassert(type(new Set()) === 'Set');\nassert(type(new WeakSet()) === 'WeakSet');\nassert(type(Symbol()) === 'Symbol');\nassert(type(new Promise(callback) === 'Promise');\nassert(type(new Int8Array()) === 'Int8Array');\nassert(type(new Uint8Array()) === 'Uint8Array');\nassert(type(new UInt8ClampedArray()) === 'Uint8ClampedArray');\nassert(type(new Int16Array()) === 'Int16Array');\nassert(type(new Uint16Array()) === 'Uint16Array');\nassert(type(new Int32Array()) === 'Int32Array');\nassert(type(new UInt32Array()) === 'Uint32Array');\nassert(type(new Float32Array()) === 'Float32Array');\nassert(type(new Float64Array()) === 'Float64Array');\nassert(type(new ArrayBuffer()) === 'ArrayBuffer');\nassert(type(new DataView(arrayBuffer)) === 'DataView');\n```\n\nAlso, if you use `Symbol.toStringTag` to change an Objects return value of the `toString()` Method, `type()` will return this value, e.g:\n\n```js\nvar myObject = {};\nmyObject[Symbol.toStringTag] = 'myCustomType';\nassert(type(myObject) === 'myCustomType');\n```\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+ssh://git@github.com/chaijs/type-detect.git"
  },
  "scripts": {
    "bench": "node bench",
    "build": "browserify --bare $npm_pakcage_main --standalone typeDetect -o type-detect.js",
    "commit-msg": "validate-commit-msg",
    "lint": "eslint --ignore-path .gitignore .",
    "prepublish": "npm run build",
    "pretest": "npm run lint",
    "semantic-release": "semantic-release pre && npm publish && semantic-release post",
    "test": "npm run test:node && npm run test:browser && npm run upload-coverage",
    "test:browser": "karma start --singleRun=true",
    "test:node": "istanbul cover _mocha",
    "upload-coverage": "lcov-result-merger 'coverage/**/lcov.info' | coveralls; exit 0"
  },
  "version": "4.0.3"
}
