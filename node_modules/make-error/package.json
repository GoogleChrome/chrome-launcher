{
  "_args": [
    [
      {
        "raw": "make-error@^1.1.1",
        "scope": null,
        "escapedName": "make-error",
        "name": "make-error",
        "rawSpec": "^1.1.1",
        "spec": ">=1.1.1 <2.0.0",
        "type": "range"
      },
      "/Users/alexamil/WebstormProjects/oresoftware/chrome-launcher/node_modules/ts-node"
    ]
  ],
  "_from": "make-error@>=1.1.1 <2.0.0",
  "_id": "make-error@1.3.0",
  "_inCache": true,
  "_location": "/make-error",
  "_nodeVersion": "7.10.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/make-error-1.3.0.tgz_1495404802218_0.3306263096164912"
  },
  "_npmUser": {
    "name": "julien-f",
    "email": "julien.fontanet@isonoe.net"
  },
  "_npmVersion": "4.5.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "make-error@^1.1.1",
    "scope": null,
    "escapedName": "make-error",
    "name": "make-error",
    "rawSpec": "^1.1.1",
    "spec": ">=1.1.1 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/ts-node"
  ],
  "_resolved": "https://registry.npmjs.org/make-error/-/make-error-1.3.0.tgz",
  "_shasum": "52ad3a339ccf10ce62b4040b708fe707244b8b96",
  "_shrinkwrap": null,
  "_spec": "make-error@^1.1.1",
  "_where": "/Users/alexamil/WebstormProjects/oresoftware/chrome-launcher/node_modules/ts-node",
  "author": {
    "name": "Julien Fontanet",
    "email": "julien.fontanet@isonoe.net"
  },
  "bugs": {
    "url": "https://github.com/JsCommunity/make-error/issues"
  },
  "dependencies": {},
  "description": "Make your own error types!",
  "devDependencies": {
    "browserify": "^14.3.0",
    "husky": "^0.13.3",
    "jest": "^20.0.3",
    "standard": "^10.0.2",
    "uglify-js": "^3.0.10"
  },
  "directories": {},
  "dist": {
    "shasum": "52ad3a339ccf10ce62b4040b708fe707244b8b96",
    "tarball": "https://registry.npmjs.org/make-error/-/make-error-1.3.0.tgz"
  },
  "files": [
    "dist/",
    "index.js",
    "index.d.ts"
  ],
  "gitHead": "adac41f9d1b3bd465f845b0c9cf87f1c88d1d7f7",
  "homepage": "https://github.com/JsCommunity/make-error",
  "keywords": [
    "create",
    "custom",
    "derive",
    "error",
    "errors",
    "extend",
    "extending",
    "extension",
    "factory",
    "inherit",
    "make",
    "subclass"
  ],
  "license": "ISC",
  "main": "index.js",
  "maintainers": [
    {
      "name": "julien-f",
      "email": "julien.fontanet@isonoe.net"
    },
    {
      "name": "marsaud",
      "email": "marsaud.fabrice@neuf.fr"
    }
  ],
  "name": "make-error",
  "optionalDependencies": {},
  "readme": "# make-error [![Build Status](https://img.shields.io/travis/JsCommunity/make-error/master.svg)](http://travis-ci.org/JsCommunity/make-error)\n\n> Make your own error types!\n\n\n## Features\n\n- Compatible Node & browsers\n- `instanceof` support\n- `error.name` & `error.stack` support\n- compatible with [CSP](https://en.wikipedia.org/wiki/Content_Security_Policy) (i.e. no `eval()`)\n\n## Installation\n\n### Node & [Browserify](http://browserify.org/)/[Webpack](https://webpack.js.org/)\n\nInstallation of the [npm package](https://npmjs.org/package/make-error):\n\n```\n> npm install --save make-error\n```\n\nThen require the package:\n\n```javascript\nvar makeError = require('make-error');\n```\n\n### Browser\n\nYou can directly use the build provided at [unpkg.com](https://unpkg.com):\n\n```html\n<script src=\"https://unpkg.com/make-error@1/dist/make-error.js\"></script>\n```\n\n## Usage\n\n### Basic named error\n\n```javascript\nvar CustomError = makeError('CustomError')\n\n// Parameters are forwarded to the super class (here Error).\nthrow new CustomError('a message')\n```\n\n### Advanced error class\n\n```javascript\nfunction CustomError (customValue) {\n  CustomError.super.call(this, 'custom error message')\n\n  this.customValue = customValue\n}\nmakeError(CustomError)\n\n// Feel free to extend the prototype.\nCustomError.prototype.myMethod = function CustomError$myMethod () {\n  console.log('CustomError.myMethod (%s, %s)', this.code, this.message)\n}\n\n//-----\n\ntry {\n  throw new CustomError(42)\n} catch (error) {\n  error.myMethod()\n}\n```\n\n### Specialized error\n\n```javascript\nvar SpecializedError = makeError('SpecializedError', CustomError);\n\nthrow new SpecializedError(42);\n```\n\n### Inheritance\n\n> Best for ES2015+.\n\n```javascript\nimport {BaseError} from 'make-error'\n\nclass CustomError extends BaseError {\n  constructor () {\n    super('custom error message')\n  }\n}\n```\n\n## Related\n\n- [make-error-cause](https://www.npmjs.com/package/make-error-cause): Make your own error types, with a cause!\n\n## Contributions\n\nContributions are *very* welcomed, either on the documentation or on\nthe code.\n\nYou may:\n\n- report any [issue](https://github.com/JsCommunity/make-error/issues)\n  you've encountered;\n- fork and create a pull request.\n\n## License\n\nISC Â© [Julien Fontanet](http://julien.isonoe.net)\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/JsCommunity/make-error.git"
  },
  "scripts": {
    "commitmsg": "yarn test",
    "dev-test": "jest --watch",
    "prepublish": "mkdir -p dist && browserify -s makeError index.js | uglifyjs -c > dist/make-error.js",
    "pretest": "standard",
    "test": "jest"
  },
  "version": "1.3.0"
}
